########################################################################
# Control and Status Register [0]

record(bo, "$(P)$(R)DevEnbl-Sel") {
  field(DESC, "enable")
  field(MASK, "1")
  field(DTYP, "stream")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(OUT, "@timing.proto evre_ctrl_set($(P),$(R)) $(PORT)")
}

record(mbbiDirect, "$(P)$(R)DevEnblRaw") {
  field(ASG, "Reserved")
  field(DESC, "enable status RAW")
  field(NOBT, "1")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evre_ctrl_enableRAW_intr $(PORT)")
  field(FLNK, "$(P)$(R)DevEnbl-Sts")
}

record(bi, "$(P)$(R)DevEnbl-Sts") {
  field(ASG, "Reserved")
  field(DESC, "enable status")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)DevEnblRaw.B0")
}

record(mbbiDirect, "$(P)$(R)LinkIntlkRaw") {
  field(ASG, "Reserved")
  field(DESC, "link and inhs status")
  field(NOBT, "8")
  field(SHFT, "6")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evre_ctrl_linkinhs_intr $(PORT)")
  field(FLNK, "$(P)$(R)Intlk-Mon")
}

record(bi, "$(P)$(R)Intlk-Mon") {
  field(ASG, "Reserved")
  field(DESC, "interlock status")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)LinkIntlkRaw.B0")
  field(FLNK, "$(P)$(R)Link-Mon")
}

record(mbbiDirect, "$(P)$(R)Los-Mon") {
  field(DESC, "Downlink status in OUT0-OUT7")
  field(NOBT, "8")
  field(DTYP, "stream")
  field(SCAN, "I/O Intr")
  field(INP, "@timing.proto evg_ctrl_los_intr $(PORT)")
}

record(bi, "$(P)$(R)Link-Mon") {
  field(ASG, "Reserved")
  field(DESC, "fibre link status")
  field(ZNAM, "Unlink")
  field(ONAM, "Link")
  field(INP, "$(P)$(R)LinkIntlkRaw.B1")
}

record(longout, "$(P)$(R)cmd_ctrl_get") {
  field(ASG, "Reserved")
  field(DESC, "Command code to read Ctrl Status reg")
  field(VAL, "0x80") # (0x80 | reg number)
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evre_ctrl_get($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_ctrl_set") {
  field(ASG, "Reserved")
  field(DESC, "Command code to write to Ctrl Status reg")
  field(VAL, "0x40") # (0x40 | reg number)
}

########################################################################
# Timestamp register [51]

record(mbbo, "$(P)$(R)TimestampSrc-Sel"){
  field(DESC, "timestamp signal source")	
  field(ZRST, "IDLE")
  field(ZRVL, "0")
  field(ONST, "DBUS")
  field(ONVL, "1")
  field(TWST, "EVENT")
  field(TWVL, "2")
  field(THST, "INTERNAL")
  field(THVL, "3")
  field(VAL, "0")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evre_tmstmp_set($(P),$(R)) $(PORT)")
}

record(longin, "$(P)$(R)UTC-RB"){
  field(ASG, "Reserved")
  field(DESC, "timestamp UTC field RBV")
  field(EGU, "seconds")
}

record(longin, "$(P)$(R)SubSecond-Mon"){
  field(ASG, "Reserved")
  field(DESC, "timestamp subsecond field RBV")
  field(EGU, "evt_T")
}

record(mbbi, "$(P)$(R)TimestampSrc-Sts"){
  field(ASG, "Reserved")
  field(DESC, "timestamp signal source RBV")	
  field(ZRST, "IDLE")
  field(ZRVL, "0")
  field(ONST, "DBUS")
  field(ONVL, "1")
  field(TWST, "EVENT")
  field(TWVL, "2")
  field(THST, "INTERNAL")
  field(THVL, "3")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evre_tmstmp_timesrcRBV_intr $(PORT)")
}

record(longout, "$(P)$(R)cmd_tmstmp_get"){
  field(ASG, "Reserved")
  field(DESC, "Command code to read timestamp reg")
  field(VAL, "0xB3")
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evre_tmstmp_get($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_tmstmp_set"){
  field(ASG, "Reserved")
  field(DESC, "Command code to write to timestamp reg")
  field(VAL, "0x73")
}

########################################################################
# Timestamp log register [52]

record(bo, "$(P)$(R)stoplog"){
  field(DESC, "stop log command")
  field(MASK, "1")
  field(ONAM, "Enbl")
  field(ZNAM, "Dsbl")
  field(FLNK, "$(P)$(R)stoplogAUX")
}

# initialization by @init
record(calcout, "$(P)$(R)stoplogAUX"){
  field(ASG, "Reserved")
  field(DESC, "Auxiliar var for stoplog")
  field(INPA, "$(P)$(R)stoplog.RVAL")
  field(CALC, "A << 7")
  field(FLNK, "$(P)$(R)STOPLOG")
}

record(bo, "$(P)$(R)rstlog"){
  field(DESC, "reset log command")
  field(MASK, "1")
  field(ONAM, "Enbl")
  field(ZNAM, "Dsbl")
  field(HIGH, "0.5")
  field(FLNK, "$(P)$(R)RSTLOG")
}

record(bo, "$(P)$(R)pull"){
  field(DESC, "pull from log command")
  field(MASK, "1")
  field(ONAM, "PULL")
  field(ZNAM, "DO NOTHING")
  field(FLNK, "$(P)$(R)checkPull")
}

record(calcout, "$(P)$(R)checkPull"){
  field(ASG, "Reserved")
  field(DESC, "Validate pull action")
  field(INPA, "$(P)$(R)EMPTY")
  field(INPB, "$(P)$(R)pull.RVAL")
  field(CALC, "(A = 0) && !(B = 0)")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P)$(R)PULL.PROC")
}

record(calcout, "$(P)$(R)STOPLOG") {
  field(ASG, "Reserved")
  field(DESC, "set stop log calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)stoplog.VAL")
  field(INPB, "$(P)$(R)RSTLOGRBV.VAL")
  field(CALC, "(A<<7)|(B<<6)")
  field(OUT, "@timing.proto evre_log_set($(P),$(R),STOPLOG) $(PORT)")
  field(FLNK, "$(P)$(R)onlyRead")
}

record(calcout, "$(P)$(R)RSTLOG") {
  field(ASG, "Reserved")
  field(DESC, "set reset log calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)stoplogAUX.VAL")
  field(INPB, "$(P)$(R)rstlog.RVAL")
  field(CALC, "(A & 128)|(B<<6)")
  field(OUT, "@timing.proto evre_log_set($(P),$(R),RSTLOG) $(PORT)")
  field(FLNK, "$(P)$(R)onlyRead")
}

record(calcout, "$(P)$(R)PULL") {
  field(ASG, "Reserved")
  field(DESC, "set pull log calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)stoplogAUX.VAL")
  field(INPB, "$(P)$(R)RSTLOGRBV.VAL")
  field(INPC, "$(P)$(R)pull.RVAL")
  field(CALC, "(A & 128)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evre_log_set($(P),$(R),PULL) $(PORT)")
  field(PRIO, "HIGH")
  field(FLNK, "$(P)$(R)readAndUpdate")
}

record(calcout, "$(P)$(R)LOGCTRL") {
  field(ASG, "Reserved")
  field(DESC, "download stop, reset, and pull")
  field(INPA, "$(P)$(R)stoplog.VAL")
  field(INPB, "$(P)$(R)rstlog.RVAL")
  field(INPC, "$(P)$(R)pull.RVAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
}

record(longin, "$(P)$(R)LOGCOUNT"){
  field(ASG, "Reserved")
  field(DESC, "number of timestamps in the buffer")
  field(EGU, "timestamps")
}

record(mbbiDirect, "$(P)$(R)LOGCTRLRBV"){
  field(ASG, "Reserved")
  field(DESC, "timestamp log control RBV")
  field(NOBT, "8")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evre_log_ctrlRBV_intr $(PORT)")
  field(FLNK, "$(P)$(R)STOPLOGRBV")
}

record(bi, "$(P)$(R)STOPLOGRBV"){
  field(ASG, "Reserved")
  field(ONAM, "Enbl")
  field(ZNAM, "Dsbl")
  field(DESC, "stop log command RBV")
  field(INP, "$(P)$(R)LOGCTRLRBV.B7")
  field(FLNK, "$(P)$(R)RSTLOGRBV")
}

record(bi, "$(P)$(R)RSTLOGRBV"){
  field(ASG, "Reserved")
  field(ONAM, "Enbl")
  field(ZNAM, "Dsbl")
  field(DESC, "reset log command RBV")
  field(INP, "$(P)$(R)LOGCTRLRBV.B6")
  field(FLNK, "$(P)$(R)FULL")
}

record(bi, "$(P)$(R)FULL"){
  field(ASG, "Reserved")
  field(ONAM, "YES")
  field(ZNAM, "NO")
  field(DESC, "timestamp buffer full flag")
  field(INP, "$(P)$(R)LOGCTRLRBV.B1")
  field(FLNK, "$(P)$(R)EMPTY")
}

record(bi, "$(P)$(R)EMPTY"){
  field(ASG, "Reserved")
  field(ONAM, "YES")
  field(ZNAM, "NO")
  field(DESC, "timestamp buffer empty flag")
  field(INP, "$(P)$(R)LOGCTRLRBV.B0")
}

record(longin, "$(P)$(R)LOGUTC"){
  field(ASG, "Reserved")
  field(DESC, "UTC timestamp pulled from log")
  field(EGU, "seconds")
}

record(longin, "$(P)$(R)LOGSUBSEC"){
  field(ASG, "Reserved")
  field(DESC, "subsecond timestamp pulled from log")
  field(EGU, "evt_T")
}

record(longin, "$(P)$(R)LOGEVENT"){
  field(ASG, "Reserved")
  field(DESC, "timestamp event pulled from log")
}

record(longout, "$(P)$(R)onlyRead"){
  field(ASG, "Reserved")
  field(DESC, "Read timestamp and don't update buffers")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evre_log_get($(P),$(R)) $(PORT)")
  field(FLNK, "$(P)$(R)LOGCTRL")
}

record(longout, "$(P)$(R)readAndUpdate"){
  field(ASG, "Reserved")
  field(DESC, "Read register and update buffers")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evre_log_get($(P),$(R)) $(PORT)")
  field(PRIO, "HIGH")
  field(FLNK, "$(P)$(R)UTCbuffer")
}

record(compress, "$(P)$(R)UTCbuffer"){
  field(ASG, "Reserved")
  field(DESC, "UTC circular buffer")
  field(EGU, "seconds")
  field(ALG, "Circular Buffer")
  field(NSAM, "1000")
  field(INP, "$(P)$(R)LOGUTC")
  field(FLNK, "$(P)$(R)SUBSECbuffer")
}

record(compress, "$(P)$(R)SUBSECbuffer"){
  field(ASG, "Reserved")
  field(DESC, "SUBSEC circular buffer")
  field(EGU, "evt_T")
  field(ALG, "Circular Buffer")
  field(NSAM, "1000")
  field(INP, "$(P)$(R)LOGSUBSEC")
  field(FLNK, "$(P)$(R)EVENTbuffer")
}

record(compress, "$(P)$(R)EVENTbuffer"){
  field(ASG, "Reserved")
  field(DESC, "Event circular buffer")
  field(ALG, "Circular Buffer")
  field(NSAM, "1000")
  field(INP, "$(P)$(R)LOGEVENT")
  field(FLNK, "$(P)$(R)LOGSOFTCNT")
}

record(calc, "$(P)$(R)LOGSOFTCNT"){
  field(ASG, "Reserved")
  field(DESC, "Software fresh data buffer counter")
  field(EGU, "timestamps")
  field(CALC, "VAL + 1")
  field(FLNK, "$(P)$(R)pullAgain")
}

record(calcout, "$(P)$(R)pullAgain"){
  field(ASG, "Reserved")
  field(DESC, "Pull again decision calc")
  field(INPA, "$(P)$(R)whileNotEmpty.VAL")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P)$(R)whileNotEmpty.PROC")
  field(FLNK, "$(P)$(R)LOGCTRL")
}

record(calcout, "$(P)$(R)PeriodicPull"){
  field(ASG, "Reserved")
  field(DESC, "Periodic pull of timestamps")
  field(SCAN, "2 second")
  field(INPA, "$(P)$(R)whileNotEmpty.VAL")
  field(INPB, "$(P)$(R)EMPTY")
  field(CALC, "(A = 0) && (B = 0)")
  field(VAL, "0")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P)$(R)whileNotEmpty.PROC")
}

record(calcout, "$(P)$(R)whileNotEmpty"){
  field(ASG, "Reserved")
  field(DESC, "Flag: pull while buffer is not empty")
  field(INPA, "$(P)$(R)EMPTY")
  field(CALC, "A = 0")
  field(VAL, "0")
  field(OUT, "$(P)$(R)pull PP")
}

record(bo, "$(P)$(R)rstSoftBuff"){
  field(DESC, "Reset software buffers")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(HIGH, "1")
  field(FLNK, "$(P)$(R)rstSoftBuffCalc")
}

record(calcout, "$(P)$(R)rstSoftBuffCalc"){
  field(ASG, "Reserved")
  field(DESC, "Reset software buffers calc")
  field(INPA, "$(P)$(R)rstSoftBuff.RVAL")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P)$(R)rstSoftBuffSeq.PROC")
}

record(sseq, "$(P)$(R)rstSoftBuffSeq"){
  field(ASG, "Reserved")
  field(DESC, "Reset software buffers sequence")
  field(SELM, "All")
  field(DO1, "1")
  field(DO2, "1")
  field(DO3, "1")
  field(DO4, "0")
  field(DO5, "1")
  field(DO6, "1")
  field(DO7, "1")
  field(LNK1, "$(P)$(R)UTCbuffer.RES PP")	# Reset and process UTC buffer. It will pull a -1 when processed.
  field(LNK2, "$(P)$(R)SUBSECbuffer.RES PP")	# Reset and process SUBSEC buffer. It will pull a -1 when processed.
  field(LNK3, "$(P)$(R)EVENTbuffer.RES PP")	# Reset and process EVENT buffer. It will pull a -1 when processed.
  field(LNK4, "$(P)$(R)LOGSOFTCNT")		# Zero soft log count
  field(LNK5, "$(P)$(R)UTCbuffer.RES")	# Reset buffer again, and do not process, to remove -1.
  field(LNK6, "$(P)$(R)SUBSECbuffer.RES")	# Reset buffer again, and do not process, to remove -1.
  field(LNK7, "$(P)$(R)EVENTbuffer.RES")	# Reset buffer again, and do not process, to remove -1.
  field(WAIT1, "Wait")
  field(WAIT2, "Wait")
  field(WAIT3, "Wait")
  field(WAIT4, "Wait")
  field(WAIT5, "Wait")
  field(WAIT6, "Wait")
}

record(longout, "$(P)$(R)cmd_log_get"){
  field(ASG, "Reserved")
  field(DESC, "Timestamp log reg read command code")
  field(VAL, "0xB4")
  field(SCAN, "1 second")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evre_log_get($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_log_set"){
  field(ASG, "Reserved")
  field(DESC, "Timestamp log reg write command code")
  field(VAL, "0x74")
}

########################################################################
# Digital input 0 [53]

record(longout, "$(P)$(R)DIEvent0-SP") {
  field(DESC, "digital input 0 event code")
  field(DRVH, "255")
  field(DRVL, "0")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evgre_diginp_ev_set($(P),$(R),0) $(PORT)")
}

record(bo, "$(P)$(R)DIEnbl0-Sel") {
  field(DESC, "digital input 0 enable")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(FLNK, "$(P)$(R)DIStateCalc0")
}

record(bo, "$(P)$(R)DIPol0-Sel") {
  field(DESC, "digital input 0 polarity")
  field(MASK, "1")
  field(ZNAM, "Normal")
  field(ONAM, "Inverse")
  field(FLNK, "$(P)$(R)DIPolCalc0")
}

record(bo, "$(P)$(R)DILog0-Sel") {
  field(DESC, "dig. input 0 event timestamp enable")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(FLNK, "$(P)$(R)DILogCalc0")
}

record(calcout, "$(P)$(R)DIStateCalc0") {
  field(ASG, "Reserved")
  field(DESC, "digital input 0 set enable calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl0-Sel.RVAL")
  field(INPB, "$(P)$(R)DIPol0-Sts.VAL")
  field(INPC, "$(P)$(R)DILog0-Sts.VAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),0,DIStateCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI0Calc")
}

record(calcout, "$(P)$(R)DIPolCalc0") {
  field(ASG, "Reserved")
  field(DESC, "digital input 0 set polarity calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl0-Sts.VAL")
  field(INPB, "$(P)$(R)DIPol0-Sel.RVAL")
  field(INPC, "$(P)$(R)DILog0-Sts.VAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),0,DIPolCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI0Calc")
}

record(calcout, "$(P)$(R)DILogCalc0") {
  field(ASG, "Reserved")
  field(DESC, "digital input 0 set timestamp calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl0-Sts.VAL")
  field(INPB, "$(P)$(R)DIPol0-Sts.VAL")
  field(INPC, "$(P)$(R)DILog0-Sel.RVAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),0,DILogCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI0Calc")
}

record(calcout, "$(P)$(R)DI0Calc") {
  field(ASG, "Reserved")
  field(DESC, "dig.inp. 0 download en, pol and time")
  field(INPA, "$(P)$(R)DIEnbl0-Sel.RVAL")
  field(INPB, "$(P)$(R)DIPol0-Sel.RVAL")
  field(INPC, "$(P)$(R)DILog0-Sel.RVAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
}

record(mbbiDirect, "$(P)$(R)DI0Raw") {
  field(ASG, "Reserved")
  field(DESC, "DIGINP0 en, pol, and timestamp RBV")
  field(NOBT, "8")
  field(SHFT, "5")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evgre_diginp0_intr $(PORT)")
  field(FLNK, "$(P)$(R)DILog0-Sts")
}

record(bi, "$(P)$(R)DILog0-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 0 timestamping sts")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)DI0Raw.B0")
  field(FLNK, "$(P)$(R)DIPol0-Sts")
}

record(bi, "$(P)$(R)DIPol0-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 0 polarity status")
  field(ZNAM, "Normal")
  field(ONAM, "Inverse")
  field(INP, "$(P)$(R)DI0Raw.B1")
  field(FLNK, "$(P)$(R)DIEnbl0-Sts")
}

record(bi, "$(P)$(R)DIEnbl0-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 0 enable status")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)DI0Raw.B2")
}

record(longin, "$(P)$(R)DIEvent0-RB") {
  field(ASG, "Reserved")
  field(DESC, "digital input 0 event RBV")
}

record(longout, "$(P)$(R)cmd_diginp_set0") {
  field(ASG, "Reserved")
  field(DESC, "Command code to write to DIGINP0")
  field(VAL, "0x75") # (0x40 | reg number=1)
}

record(longout, "$(P)$(R)cmd_diginp_get0") {
  field(ASG, "Reserved")
  field(DESC, "Command code to read DIGINP0")
  field(VAL, "0xB5") # (0x80 | reg number=1)
}

########################################################################
# Digital input 1 [54]

record(longout, "$(P)$(R)DIEvent1-SP") {
  field(DESC, "digital input 1 event code")
  field(DRVH, "255")
  field(DRVL, "0")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evgre_diginp_ev_set($(P),$(R),1) $(PORT)")
}

record(bo, "$(P)$(R)DIEnbl1-Sel") {
  field(DESC, "digital input 1 enable")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(FLNK, "$(P)$(R)DIStateCalc1")
}

record(bo, "$(P)$(R)DIPol1-Sel") {
  field(DESC, "digital input 1 polarity")
  field(MASK, "1")
  field(ZNAM, "Normal")
  field(ONAM, "Inverse")
  field(FLNK, "$(P)$(R)DIPolCalc1")
}

record(bo, "$(P)$(R)DILog1-Sel") {
  field(DESC, "dig. input 1 event timestamp enable")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(FLNK, "$(P)$(R)DILogCalc1")
}

record(calcout, "$(P)$(R)DIStateCalc1") {
  field(ASG, "Reserved")
  field(DESC, "digital input 1 set enable calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl1-Sel.RVAL")
  field(INPB, "$(P)$(R)DIPol1-Sts.VAL")
  field(INPC, "$(P)$(R)DILog1-Sts.VAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),1,DIStateCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI1Calc")
}

record(calcout, "$(P)$(R)DIPolCalc1") {
  field(ASG, "Reserved")
  field(DESC, "digital input 1 set polarity calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl1-Sts.VAL")
  field(INPB, "$(P)$(R)DIPol1-Sel.RVAL")
  field(INPC, "$(P)$(R)DILog1-Sts.VAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),1,DIPolCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI1Calc")
}

record(calcout, "$(P)$(R)DILogCalc1") {
  field(ASG, "Reserved")
  field(DESC, "digital input 1 set timestamp calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl1-Sts.VAL")
  field(INPB, "$(P)$(R)DIPol1-Sts.VAL")
  field(INPC, "$(P)$(R)DILog1-Sel.RVAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),1,DILogCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI1Calc")
}

record(calcout, "$(P)$(R)DI1Calc") {
  field(ASG, "Reserved")
  field(DESC, "dig.inp. 1 download en, pol and time")
  field(INPA, "$(P)$(R)DIEnbl1-Sel.RVAL")
  field(INPB, "$(P)$(R)DIPol1-Sel.RVAL")
  field(INPC, "$(P)$(R)DILog1-Sel.RVAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
}

record(mbbiDirect, "$(P)$(R)DI1Raw") {
  field(ASG, "Reserved")
  field(DESC, "DIGINP1 en, pol, and timestamp RBV")
  field(NOBT, "8")
  field(SHFT, "5")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evgre_diginp1_intr $(PORT)")
  field(FLNK, "$(P)$(R)DILog1-Sts")
}

record(bi, "$(P)$(R)DILog1-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 1 timestamping sts")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)DI1Raw.B0")
  field(FLNK, "$(P)$(R)DIPol1-Sts")
}

record(bi, "$(P)$(R)DIPol1-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 1 polarity status")
  field(ZNAM, "Normal")
  field(ONAM, "Inverse")
  field(INP, "$(P)$(R)DI1Raw.B1")
  field(FLNK, "$(P)$(R)DIEnbl1-Sts")
}

record(bi, "$(P)$(R)DIEnbl1-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 1 enable status")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)DI1Raw.B2")
}

record(longin, "$(P)$(R)DIEvent1-RB") {
  field(ASG, "Reserved")
  field(DESC, "digital input 1 event RBV")
}

record(longout, "$(P)$(R)cmd_diginp_set1") {
  field(ASG, "Reserved")
  field(DESC, "Command code to write to DIGINP1")
  field(VAL, "0x76") # (0x40 | reg number=1)
}

record(longout, "$(P)$(R)cmd_diginp_get1") {
  field(ASG, "Reserved")
  field(DESC, "Command code to read DIGINP1")
  field(VAL, "0xB6") # (0x80 | reg number=1)
}

########################################################################
# Digital input 2 [55]

record(longout, "$(P)$(R)DIEvent2-SP") {
  field(DESC, "digital input 2 event code")
  field(DRVH, "255")
  field(DRVL, "0")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evgre_diginp_ev_set($(P),$(R),2) $(PORT)")
}

record(bo, "$(P)$(R)DIEnbl2-Sel") {
  field(DESC, "digital input 2 enable")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(FLNK, "$(P)$(R)DIStateCalc2")
}

record(bo, "$(P)$(R)DIPol2-Sel") {
  field(DESC, "digital input 2 polarity")
  field(MASK, "1")
  field(ZNAM, "Normal")
  field(ONAM, "Inverse")
  field(FLNK, "$(P)$(R)DIPolCalc2")
}

record(bo, "$(P)$(R)DILog2-Sel") {
  field(DESC, "dig. input 2 event timestamp enable")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(FLNK, "$(P)$(R)DILogCalc2")
}

record(calcout, "$(P)$(R)DIStateCalc2") {
  field(ASG, "Reserved")
  field(DESC, "digital input 2 set enable calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl2-Sel.RVAL")
  field(INPB, "$(P)$(R)DIPol2-Sts.VAL")
  field(INPC, "$(P)$(R)DILog2-Sts.VAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),2,DIStateCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI2Calc")
}

record(calcout, "$(P)$(R)DIPolCalc2") {
  field(ASG, "Reserved")
  field(DESC, "digital input 2 set polarity calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl2-Sts.VAL")
  field(INPB, "$(P)$(R)DIPol2-Sel.RVAL")
  field(INPC, "$(P)$(R)DILog2-Sts.VAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),2,DIPolCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI2Calc")
}

record(calcout, "$(P)$(R)DILogCalc2") {
  field(ASG, "Reserved")
  field(DESC, "digital input 2 set timestamp calc")
  field(DTYP, "stream")
  field(INPA, "$(P)$(R)DIEnbl2-Sts.VAL")
  field(INPB, "$(P)$(R)DIPol2-Sts.VAL")
  field(INPC, "$(P)$(R)DILog2-Sel.RVAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
  field(OUT, "@timing.proto evgre_diginp_ept_set($(P),$(R),2,DILogCalc) $(PORT)")
  field(FLNK, "$(P)$(R)DI2Calc")
}

record(calcout, "$(P)$(R)DI2Calc") {
  field(ASG, "Reserved")
  field(DESC, "dig.inp. 2 download en, pol and time")
  field(INPA, "$(P)$(R)DIEnbl2-Sel.RVAL")
  field(INPB, "$(P)$(R)DIPol2-Sel.RVAL")
  field(INPC, "$(P)$(R)DILog2-Sel.RVAL")
  field(CALC, "(A<<7)|(B<<6)|(C<<5)")
}

record(mbbiDirect, "$(P)$(R)DI2Raw") {
  field(ASG, "Reserved")
  field(DESC, "DIGINP2 en, pol, and timestamp RBV")
  field(NOBT, "8")
  field(SHFT, "5")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evgre_diginp2_intr $(PORT)")
  field(FLNK, "$(P)$(R)DILog2-Sts")
}

record(bi, "$(P)$(R)DILog2-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 2 timestamping sts")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)DI2Raw.B0")
  field(FLNK, "$(P)$(R)DIPol2-Sts")
}

record(bi, "$(P)$(R)DIPol2-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 2 polarity status")
  field(ZNAM, "Normal")
  field(ONAM, "Inverse")
  field(INP, "$(P)$(R)DI2Raw.B1")
  field(FLNK, "$(P)$(R)DIEnbl2-Sts")
}

record(bi, "$(P)$(R)DIEnbl2-Sts") {
  field(ASG, "Reserved")
  field(DESC, "digital input 2 enable status")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(INP, "$(P)$(R)DI2Raw.B2")
}

record(longin, "$(P)$(R)DIEvent2-RB") {
  field(ASG, "Reserved")
  field(DESC, "digital input 2 event RBV")
}

record(longout, "$(P)$(R)cmd_diginp_set2") {
  field(ASG, "Reserved")
  field(DESC, "Command code to write to DIGINP2")
  field(VAL, "0x77") # (0x40 | reg number=1)
}

record(longout, "$(P)$(R)cmd_diginp_get2") {
  field(ASG, "Reserved")
  field(DESC, "Command code to read DIGINP2")
  field(VAL, "0xB7") # (0x80 | reg number=1)
}

########################################################################
# Firmware Version [62]

record(longin, "$(P)$(R)FrmVersionA-Cte"){
  #field(ASG, "Reserved")
  field(DESC, "firmware version")
  field(DTYP, "stream")
  field(INP, "@timing.proto frmvrs_get($(P),$(R)) $(PORT)")
}

record(longin, "$(P)$(R)FrmVersionB-Cte"){
  #field(ASG, "Reserved")
  field(DESC, "firmware version")
  field(DTYP, "stream")
  field(INP, "@timing.proto frmvrs_get($(P),$(R)) $(PORT)")
}

record(longin, "$(P)$(R)FrmVersionC-Cte"){
  #field(ASG, "Reserved")
  field(DESC, "firmware version")
  field(DTYP, "stream")
  field(INP, "@timing.proto frmvrs_get($(P),$(R)) $(PORT)")
}

record(calcout, "$(P)$(R)cmd_frmvrs_get"){
  field(ASG, "Reserved")
  field(DESC, "Firmware version read command code")
  field(VAL, "0xBE")
}

########################################################################
# Configuration Register [63]

record(longin, "$(P)$(R)Alive-Mon") {
  field(ASG, "Reserved")
  field(DESC, "alive")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evre_conf_alive_intr $(PORT)")
  field(FLNK, "$(P)$(R)DevStatusCalc")
}

record(mbbi, "$(P)$(R)ClkMode-RB") {
  field(ASG, "Reserved")
  field(DESC, "clock mode status")
  field(NOBT, "6")
  field(ZRVL, "11")
  field(ZRST, "60-62.5 MHz")
  field(ONVL, "12")
  field(ONST, "63-77 MHz")
  field(TWVL, "13")
  field(TWST, "77.5-91.5 MHz")
  field(THVL, "14")
  field(THST, "92-106 MHz")
  field(FRVL, "15")
  field(FRST, "106-120.5 MHz")
  field(FVVL, "16")
  field(FVST, "121-135 MHz")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evre_conf_clkmode_intr $(PORT)")
}

record(mbbi, "$(P)$(R)DevFun-Sts") {
  field(ASG, "Reserved")
  field(DESC, "function select status")
  field(NOBT, "6")
  field(ZRVL, "16")
  field(ZRST, "FOUT")
  field(ONVL, "17")
  field(ONST, "EVR")
  field(TWVL, "18")
  field(TWST, "EVG")
  field(THVL, "32")
  field(THST, "EVE")
  field(SCAN, "I/O Intr")
  field(DTYP, "stream")
  field(INP, "@timing.proto evre_conf_funsel_intr $(PORT)")
}

record(mbbo, "$(P)$(R)DevFun-Sel") {
  field(DESC, "STD-EVO configuration as EVR")
  field(ZRVL, "16")
  field(ZRST, "FOUT")
  field(ONVL, "17")
  field(ONST, "EVR")
  field(TWVL, "18")
  field(TWST, "EVG")
  field(THVL, "32")
  field(THST, "EVE")
  field(DTYP, "stream")
  field(VAL, "1")
  field(OUT, "@timing.proto evr_conf_funsel_set($(P),$(R)) $(PORT)")
}

record(mbbo, "$(P)$(R)ClkMode-SP"){
  field(DESC, "clock mode")
  field(ZRVL, "11")
  field(ZRST, "11")
  field(ONVL, "12")
  field(ONST, "12")
  field(TWVL, "13")
  field(TWST, "13")
  field(THVL, "14")
  field(THST, "15")
  field(FRVL, "15")
  field(FRST, "15")
  field(FVVL, "16")
  field(FVST, "16")
  field(VAL, "5")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evr_conf_clk_set($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_conf_get"){
  field(ASG, "Reserved")
  field(DESC, "Configuration reg read command code")
  field(VAL, "0xBF")
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(OUT, "@timing.proto evr_conf_get($(P),$(R)) $(PORT)")
}

record(longout, "$(P)$(R)cmd_conf_set") {
  field(ASG, "Reserved")
  field(DESC, "Configuration reg write command code")
  field(VAL, "0x7F")
}

########################################################################
# Write all configuration registers
record(bo, "$(P)$(R)Download-Cmd") {
  field(DESC, "download config to hardware")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
}

record(bo, "$(P)$(R)Download-Trig") {
  field(DESC, "download trigger")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evr_download($(P),$(R)) $(PORT)")
}

record(bo, "$(P)$(R)GetRBV") {
  field(DESC, "upload trigger")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  #field(HIGH, "0.5")
  field(DTYP, "stream")
  field(OUT, "@timing.proto evr_get_rbv($(P),$(R)) $(PORT)")
}

record(calc, "$(P)$(R)DevStatusCalc") {
  field(ASG, "Reserved")
  field(DESC, "device status calc")
  field(INPA, "$(P)$(R)Alive-Mon")
  field(CALC, "A=0?0:1")
  field(FLNK, "$(P)$(R)DevStatus-Mon")
}

record(bi, "$(P)$(R)DevStatus-Mon") {
  field(ASG, "Reserved")
  field(DESC, "device status")
  field(ZNAM, "WAITING")
  field(ONAM, "RUNNING")
  field(INP, "$(P)$(R)DevStatusCalc")
}

record(bi, "$(P)$(R)Network-Mon") {
  field(ASG, "Reserved")
  field(DESC, "network status")
  field(ZNAM, "Disconnected")
  field(ONAM, "Connected")
  field(FLNK, "$(P)$(R)FrmVersionA-Cte")
}

record(bo, "$(P)$(R)Save-Cmd"){
  field(DESC, "manual Save settings command")
  field(MASK, "1")
  field(ZNAM, "Dsbl")
  field(ONAM, "Enbl")
  field(FLNK, "$(P)$(R)Save-Trig")
}

record(calc, "$(P)$(R)Save-Trig"){
  field(DESC, "manual Save trigger")
  field(INPA, "$(P)$(R)Save-Cmd.VAL")
  field(CALC, "(A > 0) ? (VAL+1) : VAL")
  field(VAL, "0")
}
